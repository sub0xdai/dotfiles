# Black Metal inspired colors for exa
export EXA_COLORS="\
da=38;5;110:\
uu=38;5;244:\
sn=38;5;102:\
sb=38;5;102:\
ur=38;5;103:\
uw=38;5;95:\
ux=38;5;96:\
ue=38;5;96:\
gr=38;5;103:\
gw=38;5;95:\
gx=38;5;96:\
tr=38;5;103:\
tw=38;5;95:\
tx=38;5;96:\
di=38;5;110:\
fi=38;5;251:\
*.lua=38;5;146"

# Common aliases
alias ls='eza --icons --group-directories-first --color=always'
alias ll='eza -lah --icons --group-directories-first --color=always'
alias la='eza -a --icons --group-directories-first --color=always'
alias l='eza -F --icons --group-directories-first --color=always'
alias l.='eza -a | grep -E "^\." --color=always' # Show only dot files
alias vim='nvim'
alias nano='nvim'
alias alert='/home/m0xu/dotfiles/scripts/__alert.sh'
alias fetch='neofetch'
alias shutdown='sync; shutdown -h now'
alias tor='cd ~/Documents/tor-browser && ./start-tor-browser.desktop'
alias commit='git add -A; git commit -m'
alias ssha='eval $(ssh-agent) && ssh-add'
alias virt='virt-manager'
alias powerm="xfce4-power-manager-settings"
alias weather='curl wttr.in/melbourne'
alias fman='compgen -c | fzf | xargs man'
alias speed='speedtest-cli'
alias pomo='pomo start -t'
alias goproj='~/dotfiles/scripts/__setup_go.sh'
alias installed='~/dotfiles/scripts/__installed.sh'
alias i3-msg='i3-msg -s $(ls /run/user/1000/i3/ipc-socket.*)'
alias wind='windsurf'
alias sysinfo='~/dotfiles/scripts/__my_system.sh'
alias lg='lazygit'
alias gs='git status --short'
alias wiki="wikiman"
alias xampp='podman exec -it my-xampp /bin/bash'
alias xampp-mysql='podman exec -it my-xampp /opt/lampp/bin/mysql -u root'
alias burpsuite="$HOME/dotfiles/scripts/__run-burpsuite.sh"
alias wireshark="$HOME/dotfiles/scripts/__run-wireshark.sh"



#  Open tar or zip
peel() {
    if [[ "$1" == *.zip ]]; then
        unzip "$1"
    else
        tar xf "$1"
    fi
}


# Git remote set functions
git_sub0x() {
    REPO=${1:-$(basename $(pwd))}
    git remote set-url origin git@github-sub0xdai:sub0xdai/$REPO.git
}

migrate_repo() {
    echo "Target (1: sub0xdai-git, 2: tehuti-git):"
    read choice
    
    target_dir="$HOME/1-projects/"
    target_user=""
    target_email=""
    
    if [ "$choice" = "1" ]; then
        target_dir+="sub0xdai-git"
        target_user="sub0xdai"
        target_email="$SUB0X_EMAIL"
    else
        target_dir+="tehuti-git"
        target_user="tehuticode"
        target_email="$TEHUTI_EMAIL"
    fi

    mv "$1" "$target_dir/"
    cd "$target_dir/$1"
    git config --local user.name "$target_user"
    git config --local user.email "$target_email"
}

# Dir colors for exa and traditional ls
if command -v dircolors &> /dev/null; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
elif [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(/usr/bin/dircolors -b ~/.dircolors)" || eval "$(/usr/bin/dircolors -b)"
else
    # Fallback color configuration matching our black metal theme
    export LS_COLORS='di=38;5;110:ln=38;5;102:so=38;5;244:pi=38;5;244:ex=38;5;96:bd=38;5;110:cd=38;5;110:su=38;5;244:sg=38;5;244:tw=38;5;95:ow=38;5;110'
fi

# Tmux aliases
alias trs='tmux rename-session -t'
alias tls='tmux list-sessions'
alias tks='tmux kill-session -t'
alias tsave='tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh'
alias trestore='tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh'
alias tsd='tsave && tmux detach'
alias tx='tmuxinator'
alias tds='tmux detach'
alias tas="tmux attach -t"
alias ts='tmux switch-client -t'
alias tm="tmux"
alias tns="tmux new-session -d -s"

# Activate el-ai
alias l-ai='source ~/1-projects/sandbox/venv/bin/activate'

# Yazi shell wrapper
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

# Reload shell configuration files
reload() {
    if [ -n "$ZSH_VERSION" ]; then
        # If using Zsh, source .zshrc and shell_common
        if [ -f ~/.zshrc ]; then
            source ~/.zshrc
        fi
        if [ -f ~/.shell_common ]; then
            source ~/.shell_common
        fi
    else
        # If not using Zsh (assuming Bash), source .bashrc and shell_common
        if [ -f ~/.bashrc ]; then
            source ~/.bashrc
        fi
        if [ -f ~/.shell_common ]; then
            source ~/.shell_common
        fi
    fi

}

# Common functions
zk() {
    echo -n "title: "
    read filename
    nvim ~/1-projects/vaults/sub0x_vault/0-zettel/"$filename".md
}

zkl() {
    notes_path=~/1-projects/vaults/sub0x_vault/5-notes
    today=$(date +%Y-%m-%d)
    todays_note="$notes_path/$today.md"
    if [ ! -f "$todays_note" ]; then
        create_daily_note
    fi
    echo -n "Log: "
    read log_entry
    sed -i '/Log/,/^---/{/^---/!s/$/\n- '"$log_entry"'/;:a;n;ba}' "$todays_note"
    echo "Entry added"
}

zkt() {
    notes_path=~/1-projects/vaults/sub0x_vault/5-notes
    today=$(date +%Y-%m-%d)
    todays_note="$notes_path/$today.md"
    if [ ! -f "$todays_note" ]; then
        create_daily_note
    fi
    echo -n "Task: "
    read task_item
    # Escape special characters in the task item
    escaped_task=$(printf '%s' "$task_item" | sed 's/[\/&]/\\&/g')
    sed -i '/Task/,/^---/{/^---/!s/$/\n- [ ] '"$escaped_task"'/;:a;n;ba}' "$todays_note"
    echo "Task added"
}

create_daily_note() {
    cat << 'EOF' > "$todays_note"
---
id: <% tp.user.uuid() %>
title: <% tp.file.title %>
desc: daily log with tasks
tags: [journal]
---
---
# <% moment(tp.file.title, 'YYYY-MM-DD').format("dddd, DD MMMM YYYY") %>

>  [[<% tp.date.now("YYYY-MM-DD", -1) %>]] <=> [[<% tp.date.now("YYYY-MM-DD", +1) %>]]
---

> [!NOTE] Log
- 

---

> [!tldr] Task
- [ ] 

---

> [!warning] Backlog

```dataviewjs
// Get dates for last 5 days
const dates = [];
for (let i = 0; i < 5; i++) {
    const d = dv.date("today").minus({days: i});
    dates.push(d.toFormat("yyyy-MM-dd"));
}

// Create regex pattern from dates
const pattern = dates.map(d => d.replace(/-/g, "-")).join("|");

// Create tasks query
const query = `
not done
hide backlinks
path regex matches /${pattern}/
description regex does not match /^$/
sort by created
short mode
`;

// Output tasks block
dv.paragraph("```tasks\n" + query + "\n```");
```

---
> [[5-notes]]
EOF
}

# Environment variables
export EDITOR='nvim'
export BROWSER=zen-browser
export TERM=xterm-256color
export MANPAGER="nvim +Man!"
# For eza compatibility
export EZA_COLORS="$EXA_COLORS"
# FZF Configuration

# Default search command
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git --exclude node_modules --exclude .cache"

# FZF default options with Catppuccin Mocha theme
export FZF_DEFAULT_OPTS="
  --height 50% 
  --layout=reverse 
  --border rounded
  --margin=1
  --padding=1
  --info=inline
  --pointer='→'
  --marker='♡'
  --color=bg:-1,bg+:-1,spinner:#f5e0dc,hl:#8aadf4
  --color=fg:#cdd6f4,header:#ed8796,info:#c6a0f6,pointer:#f5e0dc
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#c6a0f6,hl+:#8aadf4"

# Ctrl+T configuration
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="
  --preview 'bat --style=numbers --color=always --line-range :500 {}' 
  --preview-window 'right:60%:wrap'
  --color=border:#aa96da
  --border-label=' Ctrl+T ' 
  --border-label-pos=2"

# Alt+C configuration
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git --exclude node_modules"
export FZF_ALT_C_OPTS="
  --preview 'eza --icons=always --tree --level=2 --color=always {}' 
  --preview-window 'right:60%'
  --color=border:#a6e3a1
  --border-label=' Alt+C ' 
  --border-label-pos=2"

# FZF Alias with Enhanced Configuration
alias fz='fzf \
  --preview "bat --color=always {}" \
  --bind "enter:execute([[ \$(file --mime-type -b {}) == application/pdf ]] && zathura {} || nvim {})+abort" \
  --border rounded \
  --margin 1 \
  --padding 1 \
  --color border:#89b4fa,spinner:#9080b3,pointer:#9080b3 \
  --color bg:-1,bg+:-1,header:#cba6f7 \
  --color fg:#e0def4,fg+:#e0def4,prompt:#cba6f7 \
  --border-label " FZF " \
  --border-label-pos 2'

# Tmux popup configuration
export FZF_TMUX_OPTS="-p 90%,70% -w 90% -h 70%"

# Path configurations
export PATH="$HOME/.asdf/shims:$HOME/perl5/bin:$HOME/.local/share/gem/ruby/3.2.0/bin:$HOME/.npm-global/bin:$HOME/.atuin/bin:$HOME/.luarocks/bin:$HOME/.cargo/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:$HOME/.local/bin:$HOME/.dotnet:$HOME/.dotnet/tools:$HOME/go/bin:$PATH"

# Language-specific configurations
. "$HOME/.cargo/env"
export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
export DOTNET_ROOT=$HOME/.dotnet
export PATH=$PATH:$HOME/.dotnet:$HOME/.dotnet/tools

# Perl configuration
export PATH="/home/m0xu/perl5/bin${PATH:+:${PATH}}"
export PERL5LIB="/home/m0xu/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="/home/m0xu/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"/home/m0xu/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/home/m0xu/perl5"

# Additional paths
export PATH="$PATH:$HOME/dotfiles/scripts"
export PATH=$PATH:/var/lib/snapd/snap/bin
export PATH=$HOME/.tmux/plugins/t-smart-tmux-session-manager/bin:$PATH
export PATH=$HOME/.config/tmux/plugins/t-smart-tmux-session-manager/bin:$PATH
# Go paths (ordered by version)
export PATH=$HOME/.asdf/installs/golang/1.23.2/packages/bin:$PATH
export PATH=$HOME/.asdf/installs/golang/1.23.4/packages/bin:$PATH
export PATH=$HOME/.asdf/installs/golang/1.24.2/packages/bin:$PATH
export PATH="$PATH:$(go env GOPATH)/bin"



# Source additional configurations
[ -f "$HOME/.secrets" ] && source "$HOME/.secrets"
if [ -f "$HOME/dotfiles/.env" ]; then
    export $(grep -v '^#' $HOME/dotfiles/.env | xargs)
fi

source ~/dotfiles/scripts/__grep_open.sh
export PATH=$HOME/go/bin:$PATH
