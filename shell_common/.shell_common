# Catppuccin Mocha colors for exa with pastel blue directories
export EXA_COLORS="\
di=38;5;146:\
ex=38;5;211:\
ln=38;5;186:\
*.md=38;5;249:\
*.txt=38;5;249:\
*.yml=38;5;146:\
*.yaml=38;5;146:\
*.json=38;5;146:\
*.toml=38;5;146:\
*.lua=38;5;146:\
*.sh=38;5;211:\
*.zsh=38;5;211:\
*.bash=38;5;211:\
*.git=38;5;183:\
*.gitignore=38;5;183:\
ur=38;5;159:\
uw=38;5;211:\
ux=38;5;211:\
ue=38;5;211:\
gr=38;5;159:\
gw=38;5;211:\
gx=38;5;211:\
tr=38;5;159:\
tw=38;5;211:\
tx=38;5;211"


# Common aliases
alias ls='exa --icons --group-directories-first --color=always'
alias ll='exa -lah --icons --group-directories-first --color=always'
alias la='exa -a --icons --group-directories-first --color=always'
alias l='exa -F --icons --group-directories-first --color=always'
alias l.='exa -a | grep -E "^\." --color=always' # Show only dot files
alias vim='nvim'
alias alert='/home/sub0x/dotfiles/scripts/alert.sh'
alias fetch='neofetch'
alias shutdown='sync; shutdown -h now'
alias tor='cd ~/Documents/tor-browser && ./start-tor-browser.desktop'
alias commit='git add -A; git commit -m'
alias ssha='eval $(ssh-agent) && ssh-add'
alias virt='virt-manager'
alias powerm="xfce4-power-manager-settings"
alias weather='curl wttr.in/melbourne'
alias fman='compgen -c | fzf | xargs man'
alias speed='speedtest-cli'
alias pomo='pomo start -t'
alias repo='~/dotfiles/scripts/repo.sh'
alias goproj='~/dotfiles/scripts/setup_go.sh'
alias silverbullet='~/.deno/bin/silverbullet ~/1-projects/vaults/silverbullet'
alias installed='~/dotfiles/scripts/installed.sh'
alias i3-msg='i3-msg -s $(ls /run/user/1000/i3/ipc-socket.*)'
alias peel='tar xf'
alias wind='windsurf'
alias sysinfo='~/dotfiles/scripts/my_system.sh'
alias lazy='lazygit'

# Dir colors for exa
if command -v dircolors &> /dev/null; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
elif [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(/usr/bin/dircolors -b ~/.dircolors)" || eval "$(/usr/bin/dircolors -b)"
else
    # Fallback color configuration if dircolors is not available
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
fi

# Tmux aliases
alias trs='tmux rename-session -t'
alias tls='tmux list-sessions'
alias tks='tmux kill-session -t'
alias tsave='tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/save.sh'
alias trestore='tmux run-shell ~/.tmux/plugins/tmux-resurrect/scripts/restore.sh'
alias tsd='tsave && tmux detach'
alias tx='tmuxinator'
alias tds='tmux detach'
alias tas="tmux attach -t"
alias ts='tmux switch-client -t'
alias tm="tmux"
alias tns="tmux new-session -d -s"

# Activate el-ai
alias l-ai='source ~/1-projects/sandbox/venv/bin/activate'

# Reload shell configuration files
reload() {
    if [ -n "$ZSH_VERSION" ]; then
        # If using Zsh, source .zshrc and shell_common
        if [ -f ~/.zshrc ]; then
            source ~/.zshrc
        fi
        if [ -f ~/.shell_common ]; then
            source ~/.shell_common
        fi
    else
        # If not using Zsh (assuming Bash), source .bashrc and shell_common
        if [ -f ~/.bashrc ]; then
            source ~/.bashrc
        fi
        if [ -f ~/.shell_common ]; then
            source ~/.shell_common
        fi
    fi

}

# Common functions
zk() {
    echo -n "title: "
    read filename
    nvim ~/1-projects/vaults/sub0x_vault/0-zettel/"$filename".md
}

zkl() {
    notes_path=~/1-projects/vaults/sub0x_vault/5-notes
    today=$(date +%Y-%m-%d)
    todays_note="$notes_path/$today.md"
    if [ ! -f "$todays_note" ]; then
        create_daily_note
    fi
    echo -n "Log: "
    read log_entry
    sed -i '/Log/,/^---/{/^---/!s/$/\n- '"$log_entry"'/;:a;n;ba}' "$todays_note"
    echo "Entry added"
}

zkt() {
    notes_path=~/1-projects/vaults/sub0x_vault/5-notes
    today=$(date +%Y-%m-%d)
    todays_note="$notes_path/$today.md"
    if [ ! -f "$todays_note" ]; then
        create_daily_note
    fi
    echo -n "Task: "
    read task_item
    sed -i '/Task/,/^---/{/^---/!s/$/\n- [ ] '"$task_item"'/;:a;n;ba}' "$todays_note"
    echo "Task added"
}

create_daily_note() {
    cat << 'EOF' > "$todays_note"
---
id: <% tp.user.uuid() %>
title: <% tp.file.title %>
desc: daily log with tasks
tags: [journal]
---
---
# <% moment(tp.file.title, 'YYYY-MM-DD').format("dddd, DD MMMM YYYY") %>

>  [[<% tp.date.now("YYYY-MM-DD", -1) %>]] <=> [[<% tp.date.now("YYYY-MM-DD", +1) %>]]
---

> [!NOTE] Log
- 

---

> [!tldr] Task
- [ ] 

---

> [!warning] Backlog

```dataviewjs
// Get dates for last 5 days
const dates = [];
for (let i = 0; i < 5; i++) {
    const d = dv.date("today").minus({days: i});
    dates.push(d.toFormat("yyyy-MM-dd"));
}

// Create regex pattern from dates
const pattern = dates.map(d => d.replace(/-/g, "-")).join("|");

// Create tasks query
const query = `
not done
hide backlinks
path regex matches /${pattern}/
description regex does not match /^$/
sort by created
short mode
`;

// Output tasks block
dv.paragraph("```tasks\n" + query + "\n```");
```

---
> [[5-notes]]
EOF
}

# Environment variables
export EDITOR='nvim'
export BROWSER=zen-browser
export TERM=xterm-256color
export MANPAGER="nvim +Man!"

# FZF Configuration

# Default search command
export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git --exclude node_modules --exclude .cache"

# FZF default options with Catppuccin Mocha theme
export FZF_DEFAULT_OPTS="
  --height 50% 
  --layout=reverse 
  --border rounded
  --margin=1
  --padding=1
  --info=inline
  --pointer='→'
  --marker='♡'
  --color=bg:-1,bg+:-1,spinner:#f5e0dc,hl:#2dd4bf
  --color=fg:#cdd6f4,header:#f38ba8,info:#cba6f7,pointer:#f5e0dc
  --color=marker:#f5e0dc,fg+:#cdd6f4,prompt:#cba6f7,hl+:#2dd4bf"

# Ctrl+T configuration
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_CTRL_T_OPTS="
  --preview 'bat --style=numbers --color=always --line-range :500 {}' 
  --preview-window 'right:60%:wrap'
  --color=border:#aa96da
  --border-label=' Ctrl+T ' 
  --border-label-pos=2"

# Alt+C configuration
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git --exclude node_modules"
export FZF_ALT_C_OPTS="
  --preview 'eza --icons=always --tree --level=2 --color=always {}' 
  --preview-window 'right:60%'
  --color=border:#a6e3a1
  --border-label=' Alt+C ' 
  --border-label-pos=2"

# FZF Alias with Enhanced Configuration
alias fz='fzf \
  --preview="bat --color=always {}" \
  --bind "enter:execute(nvim {})+abort" \
  --border=rounded \
  --margin=1 \
  --padding=1 \
  --color=border:#89b4fa,spinner:#9080b3,pointer:#9080b3 \
  --color=bg:-1,bg+:-1,header:#cba6f7 \
  --color=fg:#e0def4,fg+:#e0def4,prompt:#cba6f7 \
  --border-label=" FZF " \
  --border-label-pos=2'

# Tmux popup configuration
export FZF_TMUX_OPTS="-p 90%,70% -w 90% -h 70%"

# Path configurations
export PATH="$HOME/.asdf/shims:$HOME/perl5/bin:$HOME/.local/share/gem/ruby/3.2.0/bin:$HOME/.npm-global/bin:$HOME/.atuin/bin:$HOME/.luarocks/bin:$HOME/.cargo/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:$HOME/.local/bin:$HOME/.dotnet:$HOME/.dotnet/tools:$HOME/go/bin:$PATH"

# Language-specific configurations
. "$HOME/.cargo/env"
export PATH="$(ruby -e 'print Gem.user_dir')/bin:$PATH"
export DOTNET_ROOT=$HOME/.dotnet
export PATH=$PATH:$HOME/.dotnet:$HOME/.dotnet/tools

# Perl configuration
export PATH="/home/sub0x/perl5/bin${PATH:+:${PATH}}"
export PERL5LIB="/home/sub0x/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"
export PERL_LOCAL_LIB_ROOT="/home/sub0x/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"
export PERL_MB_OPT="--install_base \"/home/sub0x/perl5\""
export PERL_MM_OPT="INSTALL_BASE=/home/sub0x/perl5"

# Additional paths
export PATH="$PATH:$HOME/dotfiles/scripts"
export PATH=$PATH:/var/lib/snapd/snap/bin
export PATH=$PATH:/home/sub0x/.asdf/installs/golang/1.23.2/packages/bin
export PATH=$HOME/.tmux/plugins/t-smart-tmux-session-manager/bin:$PATH
export PATH=$HOME/.config/tmux/plugins/t-smart-tmux-session-manager/bin:$PATH

# Source additional configurations
[ -f "$HOME/.secrets" ] && source "$HOME/.secrets"
if [ -f "$HOME/dotfiles/.env" ]; then
    export $(grep -v '^#' $HOME/dotfiles/.env | xargs)
fi

source ~/dotfiles/scripts/grep_open.sh
